{"version":3,"sources":["logo.png","components/SearchBox/SearchBox.js","components/Card/Card.js","components/MovieCard/MovieCard.js","components/CardList/CardList.js","components/MoviesList/MoviesList.js","components/Navigation/Navigation.js","components/Login/Login.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBox","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","keypress","event","which","state","search","length","props","searchValue","route","movieNameChange","setState","target","value","movieClick","react_default","a","createElement","className","style","textShadow","type","autoFocus","onChange","onKeyPress","onClick","Component","Card","_this$props","title","year","id","poster","marginTop","src","MovieHandler","alt","React","MovieCard","rated","release","runtime","genre","director","writer","actors","plot","language","country","awards","ratings","metascore","imdbrating","imdbvotes","dvd","boxoffice","production","website","map","data","i","key","Source","Value","CardList","movieHandler","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","indMovie","isMovie","catch","err","console","log","_this2","Movies","movie","user","components_Card_Card","Title","Year","imdbID","Poster","oneMovie","components_MovieCard_MovieCard","Rated","Released","Runtime","Genre","Director","Writer","Actors","Plot","Language","Country","Awards","Ratings","Metascore","imdbRating","imdbVotes","Type","DVD","BoxOffice","Production","MoviesList","searchHandler","arr","routeHandler","routeHandlertrue","components_SearchBox_SearchBox","components_CardList_CardList","Navigation","mes","Login","Register","Home","for","name","App","HomeChange","RegisterChange","LoginChange","messsage","components_MoviesList_MoviesList","components_Login_Login","components_Register_Register","tilt_default","options","max","height","width","Logo","components_Navigation_Navigation","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0XCsDzBC,qBAlDX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAMJI,SAAS,SAACC,GACW,KAAdA,EAAMC,OAAuC,IAA3BT,EAAKU,MAAMC,OAAOC,SACvCZ,EAAKa,MAAMC,YAAYd,EAAKU,MAAMC,QAClCX,EAAKa,MAAME,UAVFf,EAcbgB,gBAAkB,SAACR,GACfR,EAAKiB,SAAS,CACVN,OAAOH,EAAMU,OAAOC,SAhBfnB,EAoBboB,WAAW,WACuB,IAA3BpB,EAAKU,MAAMC,OAAOC,SACrBZ,EAAKa,MAAMC,YAAYd,EAAKU,MAAMC,QAClCX,EAAKa,MAAME,UArBXf,EAAKU,MAAM,CACPC,OAAO,IAHFX,wEA6BT,OACIqB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wBAAwBC,MAAO,CAACC,WAAa,kBAA1D,sBACAL,EAAAC,EAAAC,cAAA,SACAI,KAAK,OACLH,UAAU,0CACVI,WAAS,EACTC,SAAU1B,KAAKa,gBACfc,WAAY3B,KAAKI,WAEjBc,EAAAC,EAAAC,cAAA,SACAI,KAAK,SACLR,MAAM,SACNK,UAAU,wCACVO,QAAS5B,KAAKiB,qBA5CNY,cCcTC,0LAbH,IAAAjC,EAAAG,KAAA+B,EACyB/B,KAAKU,MAA3BsB,EADHD,EACGC,MAAMC,EADTF,EACSE,KAAKC,EADdH,EACcG,GAAGC,EADjBJ,EACiBI,OACrB,OACIjB,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACc,UAAY,SACrBlB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKF,EAAQP,QAAS,kBAAI/B,EAAKa,MAAM4B,aAAaJ,IAAKK,IAAKP,EAAOX,UAAU,gBAClFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBO,QAAS,kBAAI/B,EAAKa,MAAM4B,aAAaJ,KAAMF,GAC/Ed,EAAAC,EAAAC,cAAA,SAAIa,WAPDO,IAAMX,YC2CVY,0LAxCH,IAAAV,EAEkF/B,KAAKU,MADpFsB,EADHD,EACGC,MAAMC,EADTF,EACSE,KAAKS,EADdX,EACcW,MAAMC,EADpBZ,EACoBY,QAAQC,EAD5Bb,EAC4Ba,QAAQC,EADpCd,EACoCc,MAAMC,EAD1Cf,EAC0Ce,SAASC,EADnDhB,EACmDgB,OAAOC,EAD1DjB,EAC0DiB,OAAOC,EADjElB,EACiEkB,KAAKC,EADtEnB,EACsEmB,SAASC,EAD/EpB,EAC+EoB,QAAQC,EADvFrB,EACuFqB,OAAOjB,EAD9FJ,EAC8FI,OAC1FkB,EAFJtB,EAEIsB,QAAQC,EAFZvB,EAEYuB,UAAUC,EAFtBxB,EAEsBwB,WAAWC,EAFjCzB,EAEiCyB,UAAUhC,EAF3CO,EAE2CP,KAAKiC,EAFhD1B,EAEgD0B,IAAIC,EAFpD3B,EAEoD2B,UAAUC,EAF9D5B,EAE8D4B,WAAWC,EAFzE7B,EAEyE6B,QAE7E,OACI1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBW,GAChCd,EAAAC,EAAAC,cAAA,OAAKiB,IAAKF,EAAQI,IAAKP,IACvBd,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,WAAuCY,GAC1Cf,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,YAAwCqB,GAC3CxB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,eAA2CsB,GAC9CzB,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,cAA0CuB,GAC7C1B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,YAAwCwB,GAC3C3B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,eAA2CyB,GAC9C5B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,aAAyC0B,GAC5C7B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,aAAyC2B,GAC5C9B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,WAAuC4B,GAC1C/B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,eAA2C6B,GAC9ChC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,cAA0C8B,GAC7CjC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,aAAyC+B,GAC5ClC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,eACFgC,EAAQQ,IAAI,SAACC,EAAKC,GACf,OAAO7C,EAAAC,EAAAC,cAAA,OAAK4C,IAAKD,GACjB7C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAgByC,EAAKG,OAAxC,MAAmDH,EAAKI,UAG5DhD,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,gBAA4CiC,GAC/CpC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,iBAA6CkC,GAChDrC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,gBAA4CmC,GAC/CtC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,WAAuCG,GAC1CN,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,UAAsCoC,GACzCvC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,gBAA4CqC,GAC/CxC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,iBAA6CsC,GAChDzC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAAhB,cAA0CuC,WAnCrC/B,cC2FTsC,cA1FX,SAAAA,EAAYzD,GAAM,IAAAb,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACdtE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KAAMU,KAeV0D,aAAa,SAAClC,GACVmC,MAAM,mDAAmD,CACrDC,OAAO,OACPC,QAAQ,CAACC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBnE,OAAO0B,MAGd0C,KAAK,SAAAC,GAAQ,OAAEA,EAASC,SACxBF,KAAK,SAAAd,GACFjE,EAAKa,MAAME,QACXf,EAAKiB,SAAS,CACViE,SAASjB,EACTkB,SAAQ,MAGfC,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAIF,MA9BxBrF,EAAKU,MAAM,CACPwE,SAAS,GACTC,SAAQ,GAJEnF,wEAkCV,IAAAwF,EAAArF,KACCsF,EAAUtF,KAAKU,MAAf4E,OACDC,EAAM,GAYV,MAXmB,iBAATD,IACVC,EAAMD,EAAOzB,IAAI,SAAC2B,EAAKzB,GACnB,OAAO7C,EAAAC,EAAAC,cAACqE,EAAD,CAAMzB,IAAKD,EAClB/B,MAAOwD,EAAKE,MACZzD,KAAOuD,EAAKG,KACZzD,GAAIsD,EAAKI,OACTzD,OAAQqD,EAAKK,OACbvD,aAAc+C,EAAKjB,mBAIE,IAAtBpE,KAAKU,MAAMoF,WAAuC,IAArB9F,KAAKO,MAAMyE,QAEvC9D,EAAAC,EAAAC,cAAA,WACKmE,IAIqB,IAAtBvF,KAAKU,MAAMoF,WAAsC,IAArB9F,KAAKO,MAAMyE,QAEvC9D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2E,EAAD,CACA/D,MAAQhC,KAAKO,MAAMwE,SAASW,MAC5BzD,KAAOjC,KAAKO,MAAMwE,SAASY,KAC3BjD,MAAQ1C,KAAKO,MAAMwE,SAASiB,MAC5BrD,QAAU3C,KAAKO,MAAMwE,SAASkB,SAC9BrD,QAAU5C,KAAKO,MAAMwE,SAASmB,QAC9BrD,MAAQ7C,KAAKO,MAAMwE,SAASoB,MAC5BrD,SAAU9C,KAAKO,MAAMwE,SAASqB,SAC9BrD,OAAS/C,KAAKO,MAAMwE,SAASsB,OAC7BrD,OAAShD,KAAKO,MAAMwE,SAASuB,OAC7BrD,KAAOjD,KAAKO,MAAMwE,SAASwB,KAC3BrD,SAAWlD,KAAKO,MAAMwE,SAASyB,SAC/BrD,QAASnD,KAAKO,MAAMwE,SAAS0B,QAC7BrD,OAAQpD,KAAKO,MAAMwE,SAAS2B,OAC5BvE,OAAQnC,KAAKO,MAAMwE,SAASc,OAC5BxC,QAASrD,KAAKO,MAAMwE,SAAS4B,QAC7BrD,UAAWtD,KAAKO,MAAMwE,SAAS6B,UAC/BrD,WAAYvD,KAAKO,MAAMwE,SAAS8B,WAChCrD,UAAWxD,KAAKO,MAAMwE,SAAS+B,UAC/BtF,KAAMxB,KAAKO,MAAMwE,SAASgC,KAC1BtD,IAAKzD,KAAKO,MAAMwE,SAASiC,IACzBtD,UAAW1D,KAAKO,MAAMwE,SAASkC,UAC/BtD,WAAY3D,KAAKO,MAAMwE,SAASmC,WAChCtD,QAAS5D,KAAKO,MAAMwE,SAASnB,gBA1BpC,SAxDU/B,aCwDRsF,qBAtDX,SAAAA,IAAa,IAAAtH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmH,IACTtH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqH,GAAAhH,KAAAH,QAQJoH,cAAc,SAACpG,GACXnB,EAAKiB,SAAS,CACVuG,IAAI,GACJ7G,OAAOQ,GACT,WACFqD,MAAM,8CAA8C,CAChDC,OAAO,OACPC,QAAQ,CAACC,eAAe,oBACxBC,KAAKC,KAAKC,UAAU,CAChBnE,OAAOX,EAAKU,MAAMC,WAGzBoE,KAAK,SAAAC,GAAQ,OAAEA,EAASC,SACxBF,KAAK,SAAAd,GACFjE,EAAKiB,SAAS,CACVuG,IAAIvD,MAGXmB,MAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,cA3BfvF,EA8BbyH,aAAa,WACTzH,EAAKiB,SAAS,CACVF,OAAM,KAhCDf,EAmCb0H,iBAAiB,WACb1H,EAAKiB,SAAS,CACVF,OAAM,KAnCVf,EAAKU,MAAM,CACP8G,IAAI,GACJ7G,OAAO,GACPI,OAAM,GALDf,wEAyCT,OACIqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAACoG,EAAD,CAAY7G,YAAaX,KAAKoH,cAAexG,MAAOZ,KAAKsH,eACzDpG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAACqG,EAAD,CAAUnC,OAAQtF,KAAKO,MAAM8G,IAAKzG,MAAOZ,KAAKuH,iBAAkBzB,SAAU9F,KAAKO,MAAMK,kBA/C5EiB,cCiBV6F,0LAjBP,IAAIC,EAWJ,OATAA,EADsB,WAAnB3H,KAAKU,MAAME,OAAqC,aAAnBZ,KAAKU,MAAME,MACvCM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOO,QAAS5B,KAAKU,MAAMkH,OAA7C,UACA1G,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOO,QAAS5B,KAAKU,MAAMmH,UAA7C,aAGA3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOO,QAAS5B,KAAKU,MAAMoH,MAA7C,QACA5G,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOO,QAAS5B,KAAKU,MAAMkH,OAA7C,YAEI1G,EAAAC,EAAAC,cAAA,WACHuG,UAdY9F,cCoCV+F,0LAlCP,OACI1G,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oDACZH,EAAAC,EAAAC,cAAA,YAAUc,GAAG,UAAUb,UAAU,6BACjCH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoB0G,IAAI,iBAAzC,SACA7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEAAqEG,KAAK,QAAQwG,KAAK,gBAAiB9F,GAAG,mBAEhIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoB0G,IAAI,YAAzC,YACA7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uEAAuEG,KAAK,WAAWwG,KAAK,WAAY9F,GAAG,eAGhIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SACAC,UAAU,6EACVG,KAAK,SACLR,MAAM,UACNY,QAAS5B,KAAKU,MAAMoH,QAEpB5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qCAAqCO,QAAS5B,KAAKU,MAAMmH,UAAtE,sBA1BIhG,cCsCLgG,0LApCP,OACI3G,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAChBH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oDACZH,EAAAC,EAAAC,cAAA,YAAUc,GAAG,UAAUb,UAAU,6BACjCH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAlB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoB0G,IAAI,YAAzC,YACA7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEAAqEG,KAAK,OAAOwG,KAAK,YAAa9F,GAAG,eAE3HhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoB0G,IAAI,iBAAzC,SACA7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qEAAqEG,KAAK,QAAQwG,KAAK,gBAAiB9F,GAAG,mBAEhIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oBAAoB0G,IAAI,YAAzC,YACA7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uEAAuEG,KAAK,WAAWwG,KAAK,WAAY9F,GAAG,eAGhIhB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,SACAC,UAAU,6EACVG,KAAK,SACLR,MAAM,WACNY,QAAS5B,KAAKU,MAAMoH,kBA3BbjG,oEC8DRoG,cArDb,SAAAA,IAAa,IAAApI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAiI,IACXpI,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmI,GAAA9H,KAAAH,QAMFkI,WAAW,WACTrI,EAAKiB,SAAS,CACZF,MAAM,UATGf,EAabsI,eAAe,WACbtI,EAAKiB,SAAS,CACZF,MAAM,cAfGf,EAmBbuI,YAAY,WACVvI,EAAKiB,SAAS,CACZF,MAAM,YAnBRf,EAAKU,MAAM,CACTK,MAAM,QAHGf,wEA0BX,IAAIwI,EAASnH,EAAAC,EAAAC,cAAA,WACXF,EAAAC,EAAAC,cAACkH,EAAD,OASF,MANsB,WAAnBtI,KAAKO,MAAMK,QACdyH,EAASnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACmH,EAAD,CAAOT,KAAM9H,KAAKkI,WAAYL,SAAU7H,KAAKmI,mBACrC,aAAnBnI,KAAKO,MAAMK,QACdyH,EAASnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACoH,EAAD,CAAUV,KAAM9H,KAAKkI,eACb,SAAnBlI,KAAKO,MAAMK,QACdyH,EAASnH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACkH,EAAD,QAEZpH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAACqH,EAAAtH,EAAD,CAAME,UAAU,OAAOqH,QAAS,CAAEC,IAAM,IAAMrH,MAAO,CAAEsH,OAAQ,IAAKC,MAAO,MAC3E3H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,IAA6BH,EAAAC,EAAAC,cAAA,OAAKiB,IAAKyG,IAAMvG,IAAI,OAAOlB,UAAU,OAAOW,MAAM,cAA/E,MAEEd,EAAAC,EAAAC,cAAA,wBAEJF,EAAAC,EAAAC,cAAC2H,EAAD,CAAYnI,MAAOZ,KAAKO,MAAMK,MAAOgH,MAAO5H,KAAKoI,YAAaP,SAAU7H,KAAKmI,eAAgBL,KAAM9H,KAAKkI,aACvGG,UA9CW7F,IAAMX,WCCJmH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpI,EAAAC,EAAAC,cAACmI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhF,KAAK,SAAAiF,GACjCA,EAAaC","file":"static/js/main.bc86fdd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.6ea21239.png\";","import React,{Component} from 'react'\r\nimport './SearchBox.css'\r\n\r\nclass SearchBox extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            search:\"\"\r\n        }\r\n    }\r\n\r\n    keypress=(event)=>{\r\n        if(event.which===13&&this.state.search.length!==0){\r\n        this.props.searchValue(this.state.search)\r\n        this.props.route()\r\n        }\r\n    }\r\n\r\n    movieNameChange = (event) => {\r\n        this.setState({\r\n            search:event.target.value\r\n        })\r\n    }\r\n\r\n    movieClick=()=>{\r\n        if(this.state.search.length!==0){\r\n        this.props.searchValue(this.state.search)\r\n        this.props.route()\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <p className=\"f2 measure green font\" style={{\"textShadow\":\"0 0 2px black\"}}>Enter to Search : </p>\r\n                <input \r\n                type=\"text\" \r\n                className=\"text b--black pa1 bg-gray white dib br3\"\r\n                autoFocus\r\n                onChange={this.movieNameChange}\r\n                onKeyPress={this.keypress}\r\n                />\r\n                <input \r\n                type=\"button\" \r\n                value=\"Search\" \r\n                className=\"grow bg-green pa1 ba br3 bw1 b--black\"\r\n                onClick={this.movieClick}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBox;","import React from 'react'\r\nimport './Card.css'\r\n\r\nclass Card extends React.Component{\r\n    render(){\r\n        const {title,year,id,poster}=this.props\r\n        return(\r\n            <div style={{\"marginTop\":\"30px\"}}>\r\n                <img src={poster} onClick={()=>this.props.MovieHandler(id)} alt={title} className=\"pointer scl\" />\r\n                <h2 className=\"green pointer tored\" onClick={()=>this.props.MovieHandler(id)}>{title}</h2>\r\n                <p>{year}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Card","import React,{Component} from 'react'\r\nimport './MovieCard.css'\r\n\r\n\r\nclass MovieCard extends Component{\r\n\r\n    render(){\r\n        const {title,year,rated,release,runtime,genre,director,writer,actors,plot,language,country,awards,poster,\r\n                ratings,metascore,imdbrating,imdbvotes,type,dvd,boxoffice,production,website}=this.props\r\n        \r\n        return(\r\n            <div className=\"Moviecard\">\r\n                <h3 className=\"green text1 f2\">{title}</h3>\r\n                <img src={poster} alt={title} />\r\n                <p><span className=\"green\">Year : </span>{year}</p>\r\n                <p><span className=\"green\">Rated : </span>{rated}</p>\r\n                <p><span className=\"green\">Released : </span>{release}</p>\r\n                <p><span className=\"green\">Runtime : </span>{runtime}</p>\r\n                <p><span className=\"green\">Genre : </span>{genre}</p>\r\n                <p><span className=\"green\">Director : </span>{director}</p>\r\n                <p><span className=\"green\">Writer : </span>{writer}</p>\r\n                <p><span className=\"green\">Actors : </span>{actors}</p>\r\n                <p><span className=\"green\">Plot : </span>{plot}</p>\r\n                <p><span className=\"green\">Language : </span>{language}</p>\r\n                <p><span className=\"green\">Country : </span>{country}</p>\r\n                <p><span className=\"green\">Awards : </span>{awards}</p>\r\n                <p><span className=\"green\">Ratings : </span></p>\r\n                {ratings.map((data,i)=>{\r\n                    return <div key={i}>\r\n                    <p><span className=\"green\"></span>{data.Source} : {data.Value}</p>    \r\n                    </div>\r\n                })}\r\n                <p><span className=\"green\">MetaScore : </span>{metascore}</p>\r\n                <p><span className=\"green\">imdbRating : </span>{imdbrating}</p>\r\n                <p><span className=\"green\">imdbVotes : </span>{imdbvotes}</p>\r\n                <p><span className=\"green\">Type : </span>{type}</p>\r\n                <p><span className=\"green\">DVD : </span>{dvd}</p>\r\n                <p><span className=\"green\">BoxOffice : </span>{boxoffice}</p>\r\n                <p><span className=\"green\">Production : </span>{production}</p>\r\n                <p><span className=\"green\">Website : </span>{website}</p>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieCard","import React,{Component} from 'react'\r\nimport Card from '../Card/Card'\r\nimport MovieCard from '../MovieCard/MovieCard'\r\n\r\nclass CardList extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            indMovie:{},\r\n            isMovie:false\r\n        }\r\n    }\r\n\r\n    // temp=(()=>{\r\n    // //     if(this.state.isMovie){\r\n    // //     this.setState({\r\n    // //         isMovie:false\r\n    // //     })\r\n    // // }\r\n    // })()\r\n\r\n    movieHandler=(id)=>{\r\n        fetch('https://shielded-basin-93043.herokuapp.com/movie',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                search:id\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.props.route()\r\n            this.setState({\r\n                indMovie:data,\r\n                isMovie:true\r\n            })\r\n        })\r\n        .catch(err=>console.log(err))\r\n    }\r\n    render(){\r\n        let {Movies} = this.props\r\n        let movie=[]\r\n        if(typeof(Movies)!=\"string\"){\r\n        movie=Movies.map((user,i)=>{\r\n            return <Card key={i} \r\n            title={user.Title} \r\n            year ={user.Year} \r\n            id={user.imdbID} \r\n            poster={user.Poster}\r\n            MovieHandler={this.movieHandler}\r\n            />\r\n        })\r\n    }\r\n        if(this.props.oneMovie===false||this.state.isMovie===false){\r\n        return(\r\n            <div>\r\n                {movie}\r\n            </div>\r\n        )\r\n        }\r\n        else if(this.props.oneMovie===true||this.state.isMovie===true){\r\n            return(\r\n                <div>\r\n                    <MovieCard \r\n                    title ={this.state.indMovie.Title}\r\n                    year ={this.state.indMovie.Year}\r\n                    rated ={this.state.indMovie.Rated}\r\n                    release ={this.state.indMovie.Released}\r\n                    runtime ={this.state.indMovie.Runtime}\r\n                    genre ={this.state.indMovie.Genre}\r\n                    director={this.state.indMovie.Director}\r\n                    writer ={this.state.indMovie.Writer}\r\n                    actors ={this.state.indMovie.Actors}\r\n                    plot ={this.state.indMovie.Plot}\r\n                    language ={this.state.indMovie.Language}\r\n                    country={this.state.indMovie.Country}\r\n                    awards={this.state.indMovie.Awards}\r\n                    poster={this.state.indMovie.Poster}\r\n                    ratings={this.state.indMovie.Ratings}\r\n                    metascore={this.state.indMovie.Metascore}\r\n                    imdbrating={this.state.indMovie.imdbRating}\r\n                    imdbvotes={this.state.indMovie.imdbVotes}\r\n                    type={this.state.indMovie.Type}\r\n                    dvd={this.state.indMovie.DVD}\r\n                    boxoffice={this.state.indMovie.BoxOffice}\r\n                    production={this.state.indMovie.Production}\r\n                    website={this.state.indMovie.website}\r\n\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default CardList","import React,{Component} from 'react'\r\nimport SearchBox from '../SearchBox/SearchBox'\r\nimport CardList from '../CardList/CardList'\r\nimport './MoviesList.css'\r\n\r\nclass MoviesList extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            arr:[],\r\n            search:\"\",\r\n            route:false\r\n        }\r\n    }\r\n\r\n    searchHandler=(value)=>{\r\n        this.setState({\r\n            arr:[],\r\n            search:value\r\n        },() => {\r\n        fetch('https://shielded-basin-93043.herokuapp.com/',{\r\n            method:'post',\r\n            headers:{'Content-Type':'application/json'},\r\n            body:JSON.stringify({\r\n                search:this.state.search\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then(data=>{\r\n            this.setState({\r\n                arr:data\r\n            })\r\n        })\r\n        .catch(err=>console.log(\"error\"))\r\n        })\r\n    }\r\n    routeHandler=()=>{\r\n        this.setState({\r\n            route:false\r\n        })\r\n    }\r\n    routeHandlertrue=()=>{\r\n        this.setState({\r\n            route:true\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"flex justify-center\">\r\n            <div className=\"content bg-dark-gray br3\">\r\n                <SearchBox  searchValue={this.searchHandler} route={this.routeHandler} />\r\n                <div className=\"scroll\">\r\n                <CardList Movies={this.state.arr} route={this.routeHandlertrue} oneMovie={this.state.route} />\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MoviesList;","import React,{ Component } from 'react';\r\nimport './Navigation.css'\r\n\r\nclass Navigation extends Component{\r\n    render(){\r\n        let mes\r\n        if(this.props.route===\"signin\"||this.props.route===\"Register\")\r\n        mes=<div className=\"nav\">\r\n            <button className=\"grow\" onClick={this.props.Login}>SignIn</button>\r\n            <button className=\"grow\" onClick={this.props.Register}>Register</button>\r\n            </div>\r\n        else\r\n        mes=<div className=\"nav\">\r\n            <button className=\"grow\" onClick={this.props.Home}>Home</button>\r\n            <button className=\"grow\" onClick={this.props.Login}>SignOut</button>\r\n            </div>\r\n        return (<div>\r\n            {mes}\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React,{Component} from 'react';\r\nimport './Login.css'\r\n\r\nclass Login extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n            <main className=\"pa4 black-80\">\r\n            <form className=\"measure center b--black ba br3 pa3 form shadow-3\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0 align\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"align\">\r\n                <input \r\n                className=\"b ph3 align pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n                onClick={this.props.Home} />\r\n                </div>\r\n                <div className=\"lh-copy mt3\">\r\n                <p className=\"f6 align link dim black db pointer\" onClick={this.props.Register}>Sign up</p>\r\n                </div>\r\n            </form>\r\n            </main>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React,{Component} from 'react';\r\nimport './Register.css'\r\n\r\nclass Register extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                \r\n            <main className=\"pa4 black-80\">\r\n            <form className=\"measure center form b--black ba br3 pa3 shadow-3\">\r\n                <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0 align\">Sign Up</legend>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" for=\"Username\">Username</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"user-name\"  id=\"user-name\" />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                    <label className=\"db fw6 lh-copy f6\" for=\"email-address\">Email</label>\r\n                    <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                    <label className=\"db fw6 lh-copy f6\" for=\"password\">Password</label>\r\n                    <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                </div>\r\n                </fieldset>\r\n                <div className=\"align\">\r\n                <input \r\n                className=\"b ph3 align pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \r\n                type=\"submit\" \r\n                value=\"Register\"\r\n                onClick={this.props.Home}\r\n                />\r\n                </div>\r\n            </form>\r\n            </main>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register","import React from 'react';\nimport MoviesList from './components/MoviesList/MoviesList'\nimport Navigation from './components/Navigation/Navigation' \nimport Login from './components/Login/Login'\nimport Register from './components/Register/Register'\nimport 'tachyons';\nimport ReactPlayer from 'react-player'\nimport './App.css'\nimport Logo from './logo.png'\nimport Tilt from 'react-tilt'\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      route:\"Home\"\n    }\n  }\n\n  HomeChange=()=>{\n    this.setState({\n      route:\"Home\"\n    })\n  }\n\n  RegisterChange=()=>{\n    this.setState({\n      route:\"Register\"\n    })\n  }\n\n  LoginChange=()=>{\n    this.setState({\n      route:\"signin\"\n    })\n  }\n\n  render(){\n    let messsage=<div>\n      <MoviesList />\n      </div>;\n\n    if(this.state.route===\"signin\")\n    messsage=<div><Login Home={this.HomeChange} Register={this.RegisterChange} /></div>\n    if(this.state.route===\"Register\")\n    messsage=<div><Register Home={this.HomeChange}/></div>\n    if(this.state.route===\"Home\")\n    messsage=<div><MoviesList /></div>\n    return (\n      <div>\n        <div className=\"title\">\n        <Tilt className=\"Tilt\" options={{ max : 40 }} style={{ height: 250, width: 250 }} >\n        <div className=\"Tilt-inner\"> <img src={Logo} alt=\"logo\" className=\"logo\" title=\"SB Movies\" /> </div>\n        </Tilt>\n          <h1>SB Movies</h1>\n          </div>\n      <Navigation route={this.state.route} Login={this.LoginChange} Register={this.RegisterChange} Home={this.HomeChange}/>\n      {messsage}\n      {/* <Login /> */}\n      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}